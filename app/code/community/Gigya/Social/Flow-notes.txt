Login process:
--------------
app/design/frontend/base/default/template/gigya/login/social_login.phtml
use helper/data.php methods to query system config for the selected user mode (disabled,social,RAAS).
Retrieves the configuration for the selected mode, and sets the gigyaMageSettings object accordingly.
(in social mode it also prints the lgin div)

js/gigya.js
Listen to registration, login, logout events.
Show the selected login screens
create the gigya Login call
pass the response from gigya to Login Controller
Accept callback from login controller and respond

#########################################################

Followbar flow:
---------------
gigya/etc/system.xml - add the admin configuration tab in admin (set defaults in config.xml)
app/design/frontend/base/default/layout/aagigya.xml - set the location in layout to display the Sharebar

create phtml file that will: pull data from feature config/default, create empty div, extend the gigiya settings js object to hold feature params
in gigya.js add observer to pull the feature params and fire the feature js call to Gigya

magento layout wiki: http://www.magentocommerce.com/wiki/4_-_themes_and_template_customization/0_-_theming_in_magento/designing-for-magento#using_xml_to_change_layout

########################################################
Flow process
------------
page load - block/hrml/head.php
_Construct:
    // check if gigya plugin enabled
    // set output template to head.phtml
    Set socialize script url:
        // check if domain is secured and set gigya cdn url prefix accordingly
        // get api key from plugin general config
        // set full socialize url

    // set config basic params (enabledProviders, lang, sessionExpiration, connectWithoutLoginBehavior)
    // set template data parameters for script tag
    // set Google analytics settings
    // Set JS base url
    // in raas mode add extra params to js base url
Initiate construct method
------
Login controller:
LoginAction - check login mode and activate corrsponding func
Social login options:
already existing site user -has UID => log in the user, update customer session and reload (192-216)
if a uid does not exist go to regsitration function.
Registration:
    email does not exist - generate add email and resubmit process (if possible move this part to JS)
    email exists, 2 option:
        customer does not exist in magento - register user and login
        customer exists in magento - link accounts process

##################################
Reviews flow:
-------------
On Dom load gigya.js observer loops through gigySettings object.
if it finds plugin.key = RnR it calls gigyaFunctions.RnR
gigyaFunctions.RnR builds plugin settings and creates the ui
It also registers gigyaFunctions.postReview to onCommentSubmitted event

On load of product page (with Reviews)
comments.phtml is loaded

On Rating submission
